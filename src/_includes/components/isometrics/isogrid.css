.iso-container {
	--size: 2rem;
	--cos30: 0.8660254;

	height: calc(6 * var(--size));
	width: calc(12 * var(--size));
	position: relative;
	overflow: hidden;
	background-color: var(--layer-bg);
	transform-origin: 0 0;
}

.iso-container {
	background-size: 1rem 1rem;
	background-image: var(--y-line);
}

.iso-container:before {
	content: '';
	position: absolute;
	z-index: 0;
	left: 0;
	top: 0;
	right: -100%;
	bottom: -100%;
	background-size: 1rem 1rem;
	background-image: var(--x-line);
	transform-origin: inherit;
	transform: scaleY(var(--cos30)) rotate(-30deg) translateX(-50%);
}

.iso-container:after {
	content: '';
	position: absolute;
	z-index: 0;
	left: 0;
	top: 0;
	right: -100%;
	bottom: -100%;
	background-size: 1rem 1rem;
	background-image: var(--x-line);
	transform-origin: inherit;
	transform: scaleY(var(--cos30)) rotate(30deg) translateY(-50%);
}

@media (max-width: 600px) {
	.iso-container {
		--size: 1rem;
	}
}

.unplaced span {
	opacity: 0;
}

.grid-face {
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	transform-origin: 0 0;
	pointer-events: none;
	z-index: 2;
}
.grid-face--xy {
	transform: scaleY(var(--cos30)) skewY(30deg) scaleY(calc(1 / var(--cos30)));
	--grid-face-bg: var(--gray-2);
}
.grid-face--yz {
	transform: scaleY(var(--cos30)) skewY(-30deg) scaleY(calc(1 / var(--cos30)));
	--grid-face-bg: var(--gray-3);
}
.grid-face--xz {
	transform: scaleY(var(--cos30)) rotate(30deg) skew(-30deg)
		scaleX(calc(1 / var(--cos30)));
	--grid-face-bg: var(--gray-1);
}

.debug .grid-face--xy {
	--layer-grid: rgba(255, 0, 0, 0.5);
}
.debug .grid-face--yz {
	--layer-grid: rgba(0, 0, 0, 0.25);
}
.debug .grid-face--xz {
	--layer-grid: rgba(0, 0, 255, 0.5);
}

.group-offset {
	display: flex;
	position: absolute;
}

.iso-cell {
	display: inline-block;
	width: var(--size);
	height: var(--size);
	background-color: var(--grid-face-bg);
	border: 1px ridge rgba(255, 255, 255, 0.15);
	transition: opacity 0.2s;
	pointer-events: auto;
}

.iso-cell:hover {
	opacity: 0.5;
}
